{"version":3,"file":"RNBoofCV.js","sourceRoot":"","sources":["../src/RNBoofCV.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAEnF,2EAA2E;AAC3E,yCAAyC;AACzC,OAAO,QAAQ,MAAM,kBAAkB,CAAC;AACxC,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAG1C,YAAY;AACZ,MAAM,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;AAC9B,MAAM,CAAC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;AAEpC,MAAM,UAAU,KAAK;IACnB,OAAO,QAAQ,CAAC,KAAK,EAAE,CAAC;AAC1B,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,KAAa;IAC/C,OAAO,MAAM,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC7C,CAAC;AAED,6FAA6F;AAC7F,6EAA6E;AAC7E,kHAAkH;AAClH,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,kBAAkB,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC;AAE1E,MAAM,UAAU,iBAAiB,CAAC,QAA6C;IAC7E,OAAO,OAAO,CAAC,WAAW,CAAqB,UAAU,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,EAAE,YAAY,EAAyC,CAAC","sourcesContent":["import { NativeModulesProxy, EventEmitter, Subscription } from 'expo-modules-core';\n\n// Import the native module. On web, it will be resolved to RNBoofCV.web.ts\n// and on native platforms to RNBoofCV.ts\nimport RNBoofCV from './RNBoofCVModule';\nimport RNBoofCVView from './RNBoofCVView';\nimport { ChangeEventPayload, RNBoofCVViewProps } from './RNBoofCV.types';\n\n// Constants\nexport const PI = RNBoofCV.PI;\nexport const EIGHT = RNBoofCV.EIGHT;\n\nexport function hello(): string {\n  return RNBoofCV.hello();\n}\n\nexport async function setValueAsync(value: string) {\n  return await RNBoofCV.setValueAsync(value);\n}\n\n// For now the events are not going through the JSI, so we have to use its bridge equivalent.\n// This will be fixed in the stable release and built into the module object.\n// Note: On web, NativeModulesProxy.RNBoofCV is undefined, so we fall back to the directly imported implementation\nconst emitter = new EventEmitter(NativeModulesProxy.RNBoofCV ?? RNBoofCV);\n\nexport function addChangeListener(listener: (event: ChangeEventPayload) => void): Subscription {\n  return emitter.addListener<ChangeEventPayload>('onChange', listener);\n}\n\nexport { RNBoofCVView, RNBoofCVViewProps, ChangeEventPayload };\n"]}